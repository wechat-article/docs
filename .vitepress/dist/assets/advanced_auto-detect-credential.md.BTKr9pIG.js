import{_ as e,c as t,o as i,af as s}from"./chunks/framework.C0xjJjYj.js";const l="/assets/img.vsFguiF6.png",p="/assets/img_3.B4UzKVfD.png",o="/assets/img_4.CP2pl3Uq.png",r="/assets/img_5.CpdfNAqz.png",n="/assets/img_6.uZ47rT98.png",d="/assets/img_7.BypUBFyE.png",y=JSON.parse('{"title":"自动获取 Credential","description":"","frontmatter":{},"headers":[],"relativePath":"advanced/auto-detect-credential.md","filePath":"advanced/auto-detect-credential.md","lastUpdated":1742404723000}'),c={name:"advanced/auto-detect-credential.md"};function m(h,a,g,_,u,b){return i(),t("div",null,a[0]||(a[0]=[s('<h1 id="自动获取-credential" tabindex="-1">自动获取 Credential <a class="header-anchor" href="#自动获取-credential" aria-label="Permalink to &quot;自动获取 Credential&quot;">​</a></h1><p>为了更好的用户体验，我编写了一个 mitmproxy 插件，用来自动获取公众号的 Credential 数据，从而省去了手动抓包并解析相关参数的工作，具体操作可查看以下内容：</p><h2 id="视频版" tabindex="-1">视频版 <a class="header-anchor" href="#视频版" aria-label="Permalink to &quot;视频版&quot;">​</a></h2><h2 id="文字版" tabindex="-1">文字版 <a class="header-anchor" href="#文字版" aria-label="Permalink to &quot;文字版&quot;">​</a></h2><p>打开网站的任意一个页面，都会发现右上角有一个4个小方块的图标，如下图所示：</p><p><img src="'+l+'" alt="" data-zoomable="true" loading="lazy"></p><p>该图标可在页面上任意拖动位置，松开时会自动停靠在窗口边缘，点击时会打开【自动抓取 Credential】的信息面板，如下图所示：</p><p><img src="'+p+'" alt="" data-zoomable="true" loading="lazy"></p><p>我们需要下载这个 mitmproxy 插件，该插件的名字为<code>credential.py</code>，下载后，执行以下命令启动<code>mitmproxy</code>并加载该插件：</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mitmdump</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> credential.py</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>执行后的结果如下：</p><p><img src="'+o+'" alt="" data-zoomable="true" loading="lazy"></p><p>可以看到输出一个会话密钥，我们将该密钥填入上面弹框中的<code>API Key</code>的输入框中，然后点击【认证】按钮，认证成功后就可以开始进行监控了，如下图所示：</p><p><img src="'+r+'" alt="" data-zoomable="true" loading="lazy"></p><p>此时我们需要将系统的代理设置为 mitmproxy 的代理，地址为<code>127.0.0.1:8080</code>，如下所示：</p><p><img src="'+n+'" alt="" data-zoomable="true" loading="lazy"></p><p>然后我们就可以在微信中打开目标公众号的任意一篇文章（注意，必须在微信内置浏览器中打开），如果没有监控到的话，就手动刷新一下文章页面，如下图所示：</p><p><img src="'+d+'" alt="" data-zoomable="true" loading="lazy"></p><p>表示成功抓取到了公众号的 Credential 数据了。</p><p><strong>之后如果发现某个公众号的 Credential 过期了，直接在微信内重新打开他的一篇文章，就可以自动获取到他的最新 Credential 数据了。</strong></p><p>这样在下载文章及评论数据时，就会自动使用该信息进行抓取。</p><div class="warning custom-block"><p class="custom-block-title">注意</p><p>由于浏览器对定时器执行频率会有限频，所以最好打开页面的控制台，这样可以防止浏览器休眠页面上的定时器</p></div><h3 id="特别说明" tabindex="-1">特别说明 <a class="header-anchor" href="#特别说明" aria-label="Permalink to &quot;特别说明&quot;">​</a></h3><p>上面提到的那个四个方块的图标共有3种状态，对应不同颜色</p><ol><li><p>灰色 表示非监听状态</p></li><li><p>蓝色 表示正在进行监听，且有效数据大于0</p></li><li><p>橙色 表示正在监听，且有效数据等于0</p></li></ol>',25)]))}const C=e(c,[["render",m]]);export{y as __pageData,C as default};
